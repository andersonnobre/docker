--- Criar o arquivo ngnix.conf
--acessar site do laravel verificar como configurar 
https://laravel.com/docs/8.x/deployment#nginx

-- Copiar o trecho do codigo para o arquivo ngnix.conf

server {
    listen 80;
    index index.php index.html;
    root /var/www/html;

    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";

    charset utf-8;

    location ~ \.php$ {
        fastcgi_pass laravel:9000;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        include fastcgi_params;
    }

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    error_page 404 /index.php;

    location ~ /\.(?!well-known).* {
        deny all;
    }
}

--Configurar os arquivos padroes 
    index index.php index.html;
---Definir a pasta principal root para diretorio do laravel

    root /var/www/public;

--Configurar o servidor remoto fastcgi_pass to remote server, configurar para porta que foi exposta no servidor laravel
   fastcgi_pass laravel:9000;
-- é preciso copiar o arquivo nginx.config para substituir as configurações padrões.

-- Remover a configuraão padrão do nginx
RUN rm /etc/nginx/conf.d/default.conf

--Criar uma arquivo php mesmo que em branco para funcionar o redirecionamento, -p é pra criar diretorio e sub qd nao existir
RUN mkdir /var/www/public -p && /var/www/public/index.php

--Criar a imagem do nginx com as configurações do proxy
~/docker/nginx$ docker build -t nobre/ngnix:prod . -f Dockerfile.prod

-- image criada
FROM nginx:1.15.0-alpine

RUN rm /etc/nginx/conf.d/default.conf

COPY ngnix.conf /etc/nginx/conf.d/

----RUN mkdir /var/www/laravel/public -p && touch /var/www/laravel/public/index.php

----OBS: ALTERADO PQ DEU error laravel/public para html

FROM nginx:1.15.0-alpine

RUN mkdir /var/www/html -p && touch /var/www/html/index.php


--- Criar uma rede pra colocar os 2 container na mesma rede 

docker network create laranet


--- Colocar container laravel na rede laranet
docker run -d --name laravel --network laranet nobre/lavarel:prod
--- Colocar container nginx na rede laranet
docker run -d --name ngnix --network laranet -p 8080:80 nobre/ngnix:prod
